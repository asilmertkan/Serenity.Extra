{
  "version": 3,
  "sources": ["../../../../../Modules/Administration/AuditLog/AuditLogPage.ts", "../../../../../Modules/Administration/AuditLog/AuditLogDialog.ts", "../../../../../Modules/Administration/AuditLog/AuditLogGrid.ts"],
  "sourcesContent": ["import { initFullHeightGridPage } from \"@serenity-is/corelib/q\"\nimport { AuditLogGrid } from \"./AuditLogGrid\";\n\n$(function() {\n    initFullHeightGridPage(new AuditLogGrid($('#GridDiv')).element);\n});", "import { AuditLogRow, AuditLogForm, AuditLogService } from \"@/ServerTypes/_Ext\";\r\nimport { Decorators } from \"@serenity-is/corelib\"\r\nimport { DialogBase } from \"@/_Ext/Bases/DialogBase\"\r\n\r\n@Decorators.registerClass('_Ext.AuditLogDialog')\r\nexport class AuditLogDialog extends DialogBase<AuditLogRow, any> {\r\n    protected getFormKey() { return AuditLogForm.formKey; }\r\n    protected getRowType() { return AuditLogRow; }\r\n    protected getService() { return AuditLogService.baseUrl; }\r\n\r\n    protected form = new AuditLogForm(this.idPrefix);\r\n\r\n    protected afterLoadEntity() {\r\n        super.afterLoadEntity();\r\n\r\n        this.form.Changes.value = AuditLogDialog.getChangesInHtml(this.entity.Changes);\r\n    }\r\n\r\n    static getChangesInHtml(changesInJson: string) {\r\n        if (!changesInJson) return '';\r\n\r\n        let changes = JSON.parse(changesInJson);\r\n\r\n        let changesHtml = '';\r\n        for (let field in changes) {\r\n            let fieldValues = changes[field];\r\n            changesHtml += `\r\n<tr>\r\n    <td>${field}</td>\r\n    <td>${fieldValues[0]}</td>\r\n    <td>${fieldValues[1]}</td>\r\n</tr>\r\n`;\r\n        }\r\n\r\n        return `\r\n<table class=\"table table-bordered table-condensed table-striped\">\r\n    <tr>\r\n        <th>Field</th>\r\n        <th>Old Value</th>\r\n        <th>New Value</th>\r\n    </tr>\r\n    ${changesHtml}\r\n</table>\r\n`;;\r\n    }\r\n}\r\n", "import { AuditLogDialog } from \"./AuditLogDialog\";\r\nimport { AuditLogColumns, AuditLogRow, AuditLogService } from \"@/ServerTypes/_Ext\";\r\nimport { Decorators, DateTimeEditor } from \"@serenity-is/corelib\"\r\nimport * as Q from \"@serenity-is/corelib/q\"\r\nimport { GridBase } from \"@/_Ext/Bases/GridBase\"\r\n\r\n@Decorators.registerClass('_Ext.AuditLogGrid')\r\nexport class AuditLogGrid extends GridBase<AuditLogRow, any> {\r\n    protected getColumnsKey() { return AuditLogColumns.columnsKey; }\r\n    protected getDialogType() { return AuditLogDialog; }\r\n    protected getRowDefinition() { return AuditLogRow; }\n    protected getIdProperty() { return AuditLogRow.idProperty; }\r\n    protected getService() { return AuditLogService.baseUrl; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\r\n\r\n    protected getButtons() {\r\n        var buttons = super.getButtons();\r\n        buttons.splice(0, 1);\r\n\r\n        return buttons;\r\n    }\r\n\r\n    protected createQuickFilters(): void {\r\n        super.createQuickFilters();\r\n\r\n        let fld = AuditLogRow.Fields;\r\n\r\n        let actionDateQuickFilter = this.findQuickFilter(DateTimeEditor, fld.ActionDate);\r\n\r\n        actionDateQuickFilter.valueAsDate = Q.today();\r\n    }\r\n}\r\n"],
  "mappings": "wNAAA,IAAAA,EAAuC,SCCvC,IAAAC,EAA2B,SAIpB,IAAMC,EAAN,cAA6BC,CAA6B,CAA1D,kCAKH,KAAU,KAAO,IAAIC,EAAa,KAAK,QAAQ,EAJrC,YAAa,CAAE,OAAOA,EAAa,OAAS,CAC5C,YAAa,CAAE,OAAOC,CAAa,CACnC,YAAa,CAAE,OAAOC,EAAgB,OAAS,CAI/C,iBAAkB,CACxB,MAAM,gBAAgB,EAEtB,KAAK,KAAK,QAAQ,MAAQJ,EAAe,iBAAiB,KAAK,OAAO,OAAO,CACjF,CAEA,OAAO,iBAAiBK,EAAuB,CAC3C,GAAI,CAACA,EAAe,MAAO,GAE3B,IAAIC,EAAU,KAAK,MAAMD,CAAa,EAElCE,EAAc,GAClB,QAASC,KAASF,EAAS,CACvB,IAAIG,EAAcH,EAAQE,CAAK,EAC/BD,GAAe;AAAA;AAAA,UAEjBC;AAAA,UACAC,EAAY,CAAC;AAAA,UACbA,EAAY,CAAC;AAAA;AAAA,CAGf,CAEA,MAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOTF;AAAA;AAAA,CAGF,CACJ,EAzCaG,EAAAV,EAAA,kBAAAA,EAANW,EAAA,CADN,aAAW,cAAc,qBAAqB,GAClCX,GCHb,IAAAY,EAA2C,SAC3CC,EAAmB,SAIZ,IAAMC,EAAN,cAA2BC,CAA2B,CAC/C,eAAgB,CAAE,OAAOC,EAAgB,UAAY,CACrD,eAAgB,CAAE,OAAOC,CAAgB,CACzC,kBAAmB,CAAE,OAAOC,CAAa,CACzC,eAAgB,CAAE,OAAOA,EAAY,UAAY,CACjD,YAAa,CAAE,OAAOC,EAAgB,OAAS,CAEzD,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CAEU,YAAa,CACnB,IAAIC,EAAU,MAAM,WAAW,EAC/B,OAAAA,EAAQ,OAAO,EAAG,CAAC,EAEZA,CACX,CAEU,oBAA2B,CACjC,MAAM,mBAAmB,EAEzB,IAAIC,EAAMJ,EAAY,OAElBK,EAAwB,KAAK,gBAAgB,iBAAgBD,EAAI,UAAU,EAE/EC,EAAsB,YAAgB,QAAM,CAChD,CACJ,EA3BaC,EAAAV,EAAA,gBAAAA,EAANW,EAAA,CADN,aAAW,cAAc,mBAAmB,GAChCX,GFJb,EAAE,UAAW,IACT,0BAAuB,IAAIY,EAAa,EAAE,UAAU,CAAC,EAAE,OAAO,CAClE,CAAC",
  "names": ["import_q", "import_corelib", "AuditLogDialog", "DialogBase", "AuditLogForm", "AuditLogRow", "AuditLogService", "changesInJson", "changes", "changesHtml", "field", "fieldValues", "__name", "__decorateClass", "import_corelib", "Q", "AuditLogGrid", "GridBase", "AuditLogColumns", "AuditLogDialog", "AuditLogRow", "AuditLogService", "container", "buttons", "fld", "actionDateQuickFilter", "__name", "__decorateClass", "AuditLogGrid"]
}
